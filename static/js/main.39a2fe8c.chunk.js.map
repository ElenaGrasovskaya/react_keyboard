{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","char","onKeyboardEvent","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAwB,CACtBC,KAAM,IAFV,EAaEC,gBAAkB,SAACC,GACjB,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAdhC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,mBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,mBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACGF,KAAKR,MAAMC,KACV,mBAAGS,UAAU,eAAb,4CAAyDF,KAAKR,MAAMC,KAApE,OAEA,mBAAGS,UAAU,eAAb,2CAvBV,GAAyBC,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.39a2fe8c.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  char: string;\n}\n\nexport class App extends React.Component<{}, State> {\n  state:Readonly<State> = {\n    char: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.onKeyboardEvent);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.onKeyboardEvent);\n  }\n\n  onKeyboardEvent = (event: KeyboardEvent) => {\n    this.setState({ char: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.char ? (\n          <p className=\"App__message\">{`The last pressed key is [${this.state.char}]`}</p>\n        ) : (\n          <p className=\"App__message\">Nothing was pressed yet</p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}